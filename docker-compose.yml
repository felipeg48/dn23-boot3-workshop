version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: unless-stopped
    extra_hosts: ['host.docker.internal:host-gateway']
    environment:
      - POSTGRES_DB=dog-db
      - POSTGRES_USER=dog
      - POSTGRES_PASSWORD=woof
    ports:
      - 5433:5432
    volumes:
      - postgres:/var/lib/postgresql/data
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.42.0
    restart: unless-stopped
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
  grafana:
    container_name: grafana
    image: grafana/grafana:9.4.3
    restart: unless-stopped
    extra_hosts: ['host.docker.internal:host-gateway']
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - 3000:3000
  tempo:
    container_name: tempo
    image: grafana/tempo:2.0.1
    restart: unless-stopped
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ['-config.file=/etc/tempo.yml']
    volumes:
      - ./docker/grafana/tempo.yml:/etc/tempo.yml:ro
      - tempo:/tmp/tempo
    ports:
      - 3200:3200    # tempo
      - 9411:9411    # zipkin
  loki:
    container_name: loki
    image: grafana/loki:2.7.4
    restart: unless-stopped
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ['-config.file=/etc/loki/local-config.yaml']
    ports:
      - 3100:3100
  toxiproxy:
    container_name: toxiproxy
    image: ghcr.io/shopify/toxiproxy:2.5.0
    command: -host=0.0.0.0 -config /config/toxiproxy.json -proxy-metrics -runtime-metrics
    depends_on:
      - postgres
    volumes:
      - ./docker/toxiproxy:/config
    ports:
      - 8474:8474
      - 5432:5432
  toxiproxy-ui:
    container_name: toxiproxy-ui
    image: buckle/toxiproxy-frontend:0.10
    environment:
      TOXIPROXY_URL: http://host.docker.internal:8474
    depends_on:
      - toxiproxy
    ports:
      - 8484:8080
  # zipkin:
  #   container_name: zipkin
  #   image: openzipkin/zipkin:2.24
  #   restart: unless-stopped
  #   extra_hosts: ['host.docker.internal:host-gateway']
  #   ports:
  #     - 9411:9411
volumes:
  postgres:
    driver: local
  prometheus:
    driver: local
  tempo:
    driver: local
